<?xml version="1.0" encoding="UTF-8"?>
 
<databaseChangeLog
	xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
	xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd
		http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

<changeSet runOnChange="true" author="rangerrick" id="getManagedOutageForIntfInWindow">
<createProcedure>
CREATE OR REPLACE FUNCTION getManagedOutageForIntfInWindow(integer,varchar(16),timestamp without time zone,timestamp without time zone)
        RETURNS float8 AS '
   DECLARE
        nid ALIAS FOR $1;
        ipid ALIAS FOR $2;
        xtime ALIAS FOR $3;
        ytime ALIAS FOR $4;
        downtime float8 := 0.0;
        orec RECORD;
   BEGIN
        FOR orec IN SELECT distinct ifservices.nodeid, ifservices.ipaddr, ifservices.serviceid FROM ipinterface, ifservices where ifservices.nodeid = nid AND ifservices.ipaddr = ipid AND ipinterface.nodeid = nid AND ipinterface.ipaddr = ipid AND ipinterface.ismanaged = ''M'' AND ifservices.status = ''A''
        LOOP
                BEGIN
                        downtime := downtime + getOutageTimeInWindow( orec.nodeid, orec.ipaddr, orec.serviceid, xtime, ytime);
                END;
        END LOOP;
        RETURN downtime;
   END;
' LANGUAGE 'plpgsql';
</createProcedure>

<rollback>
  <sql>DROP FUNCTION IF EXISTS getManagedOutageForIntfInWindow(integer,varchar(16),timestamp without time zone,timestamp without time zone);</sql>
</rollback>

</changeSet>

</databaseChangeLog>