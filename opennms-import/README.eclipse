To Use Eclipse to develop this project:


Getting the Project to Build in Eclipse

1. Install the Maven2 Plugin for Eclipse (http://maven.apache.org/eclipse-plugin.html)
2. Go to Window->Preferences->Maven2
	a. make sure your local repository is set to <home-dir>/.m2/repository
	b. if you would like to see more in the log turn on debug output
3. Checkout the project using eclipse from www.opennms.org:/var/lib/cvsroot
	a. When checking it out just say 'check out project in workspace'
4. After the project is checked out, right-click the project and select Maven2->Enable
5. At this point the mvn builder will start and take what seems to be an excessively
	long time downloading needed jars and other such stuff.  (NOTE: it only takes this
	very long time the first time... other runs are much quicker.. though not speedy)
	a. If you find that some jars are missing that start with javax. then read this:
		http://maven.apache.org/guides/mini/guide-coping-with-sun-jars.html
6. When this finally finishes, you will have a very confused project because it will
	have the wrong source folders listed.  To fix this right-click on the project and 
	select Maven2->Update Source Folders
7. After the mvn builder has run again, it will run generate-sources goal and update
	the source folders for the project. (You may need to right-click the project and
	select Refresh after this finishes)
	a. If everything has gone will you should have the following directories as source
		folders (the order may be different):
			src/main/java
			src/main/resources
			src/test/java
			src/test/resources
			target/generated-sources/castor
			target/generated-sources/xdoclet
			
8. Lastly, depending on how you checked out the project you may need add the
	JRE System Library to you classpath.
	a. Right click on the project and select Build Path -> Add Libraries
	b. Select the JRE System Library
	c. Click finish
9. At this point you should have a working project.  Try expanding the src/test/java
	folder and running some tests.
	

Other Interesting Things To Do

A. Updating the Generated Sources.

Whenever you change the .xsd file or any of the xdoclet tags you will need to regenerate
the sources.  

1.  Select Maven2->Update Source Folders.  This will automatically update the project
to see if there are errors you may need to manual switch the Console to the M2 view.
Do this by click the little picture that looks like a monitor and selecting M2.


B. Adding dependencies

This can be done two ways.

1. Select Maven2->Add Dependency.  This will give you a window and you can type names
into and it will search the central repo for matching dependencies.  When you select
one and click Ok it will automatically update the pom.xml file.  (NOTE: any comments
in the pom.xml file will be removed by the update so don't use this if you have comments
in you file)

2. Edit pom.xml.  You can manually edit pom.xml and way you want to.  Whenever you save
this file the mvn builder will be run to rebuild the project

C.  Stepping into source

1.  If you source is available in the maven repo for a dependency it will automatically
be downloaded and attached to you jar file.  When this happens you will be able to jump
into source code for dependencies.  SpringFramework currently has source available and
so it is easy to step into spring methods

