<?xml version="1.0" encoding="UTF-8"?>
<schema
  targetNamespace="http://xmlns.opennms.org/xsd/config/thresholding-config"
  xmlns="http://www.w3.org/2001/XMLSchema"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:this="http://xmlns.opennms.org/xsd/config/thresholding-config"
  xmlns:ns2="http://www.w3.org/1999/xhtml"
  xmlns:ns="http://www.w3.org/2001/XMLSchema"
  xmlns:hfp="http://www.w3.org/2001/XMLSchema-hasFacetAndProperty"
  elementFormDefault="qualified">
  <annotation>
    <documentation>
      XML Schema for the thresholds.xml configuration file. Version:
      $Id: thresholding-config.xsd 5960 2007-03-15 03:01:15 +0000 (Thu,
      15 Mar 2007) cmiskell $
    </documentation>
  </annotation>

  <element name="thresholding-config">
    <annotation>
      <documentation>
        Top-level element for the thresholds.xml configuration file.
      </documentation>
    </annotation>

    <complexType>
      <sequence>
        <element maxOccurs="unbounded" minOccurs="0" ref="this:group">
          <annotation>
            <documentation>Thresholding group element</documentation>
          </annotation>
        </element>
      </sequence>
    </complexType>
  </element>

  <element name="group">
    <annotation>
      <documentation>
        Grouping of related threshold definitions
      </documentation>
    </annotation>

    <complexType>
      <sequence>
        <element maxOccurs="unbounded" minOccurs="0"
          ref="this:threshold">
          <annotation>
            <documentation>Threshold definition</documentation>
          </annotation>
        </element>
        <element maxOccurs="unbounded" minOccurs="0"
          ref="this:expression">
          <annotation>
            <documentation>Expression definition</documentation>
          </annotation>
        </element>
      </sequence>

      <attribute name="name" type="string" use="required">
        <annotation>
          <documentation>Group name</documentation>
        </annotation>
      </attribute>

      <attribute name="rrdRepository" type="string" use="required">
        <annotation>
          <documentation>
            Full path to the RRD repository where the data is stored
          </documentation>
        </annotation>
      </attribute>
    </complexType>
  </element>

  <!-- Expression definitions -->
  <complexType name="basethresholddef" abstract="true">
    <sequence>
       <element maxOccurs="unbounded" minOccurs="0" ref="this:resource-filter">
         <annotation>
           <documentation>The filter used to select the ds by a string</documentation>
         </annotation>
       </element>
    </sequence>

    <attribute name="description" type="string" use="optional">
      <annotation>
        <documentation>
          An optional description for the threshold, to help identify what is their purpose.
        </documentation>
      </annotation>
    </attribute>

    <attribute name="type" type="string" use="required">
      <annotation>
        <documentation>
          Threshold type. "high" to trigger if the value exceeds the threshold,
          "low" to trigger if the value drops below the threshold,
          "relativeChange" to trigger if the value changes more than the proportion represented by the threshold, or
          "absoluteChange" to trigger if the value changes by more than the threshold value
        </documentation>
      </annotation>
    </attribute>

    <attribute name="ds-type" type="string" use="required">
      <annotation>
        <documentation>
          RRD datasource type. "node" indicates a node level datasource.
          "if" indicates an interface level datasource.
        </documentation>
      </annotation>
    </attribute>

    <attribute name="value" type="double" use="required">
      <annotation>
        <documentation>
          Threshold value. If the datasource value rises above this
          value, in the case of a "high" threshold, or drops below this
          value, in the case of a "low" threshold the threshold is
          considered to have been exceeded and the exceeded count will
          be incremented. Any time that the datasource value drops below
          this value, in the case of a "high" threshold, or rises above
          this value, in the case of a "low" threshold the exceeded
          count is reset back to zero. Whenever the exceeded count
          reaches the trigger value then a threshold event is generated.
        </documentation>
      </annotation>
    </attribute>

    <attribute name="rearm" type="double" use="required">
      <annotation>
        <documentation>
          Rearm value. Identifies the value that the datasource must
          fall below, in the case of a "high" threshold or rise above,
          in the case of a "low" threshold, before the threshold will
          rearm, and once again be eligible to generate an event.
        </documentation>
      </annotation>
    </attribute>

    <attribute name="trigger" use="required">
      <annotation>
        <documentation>
          Trigger value. Identifies the number of consecutive polls that
          the datasource value must exceed the defined threshold value
          before a threshold event is generated.
        </documentation>
      </annotation>

      <simpleType>
        <restriction base="int">
          <minInclusive value="1"/>
        </restriction>
      </simpleType>      
    </attribute>

    <attribute name="ds-label" type="string" use="optional">
      <annotation>
        <documentation>
          Value to retrieve from strings.properties to label this
          datasource.
        </documentation>
      </annotation>
    </attribute>
    
    <attribute name="triggeredUEI" type="string" use="optional">
      <annotation>
        <documentation>
          The UEI to send when this threshold is triggered. If not
          specified, defaults to standard threshold UEIs
        </documentation>
      </annotation>
    </attribute>
    
    <attribute name="rearmedUEI" type="string" use="optional">
      <annotation>
        <documentation>
          The UEI to send when this threshold is re-armed. If not
          specified, defaults to standard threshold UEIs
        </documentation>
      </annotation>
    </attribute>
    
    <attribute name="filterOperator" use="optional" default="or">
      <annotation>
        <documentation>
          The operator to be used when applying filters. The
          default is "or". If you want to match all filters,
          you should specify "and";
        </documentation>
      </annotation>
      <simpleType>
        <restriction base="string">
          <pattern value="([Oo][Rr])|([Aa][Nn][Dd])"/>
        </restriction>
      </simpleType>
    </attribute>
    
  </complexType>

  <element name="resource-filter">
    <complexType>
      <simpleContent>
        <extension base="string">
          <attribute name="field" type="string" use="required"/>
        </extension>
      </simpleContent>
    </complexType>
  </element>
  
  <element name="threshold">
    <annotation>
      <documentation>Threshold definition</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="this:basethresholddef">
          <attribute name="ds-name" type="string" use="required">
            <annotation>
              <documentation>
                RRD datasource name. Mutually exclusive with expression,
                but one of them must be specified
              </documentation>
            </annotation>
          </attribute>
        </extension>
      </complexContent>
    </complexType>
  </element>
  
  <element name="expression">
    <annotation>
      <documentation>Threshold definition</documentation>
    </annotation>
    <complexType>
      <complexContent>
        <extension base="this:basethresholddef">
          <attribute name="expression" type="string" use="required">
            <annotation>
              <documentation>
                An expression of Datasource names and constants to be
                evaluate
              </documentation>
            </annotation>
          </attribute>
        </extension>
      </complexContent>
    </complexType>
  </element>

</schema>
