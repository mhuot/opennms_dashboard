<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>

	<cacheModel id="user-cache" type="LRU">
		<flushInterval minutes="60" />
		<flushOnExecute statement="deleteUser" />
		<flushOnExecute statement="deleteUserItems" />
		<flushOnExecute statement="disableUser" />
		<flushOnExecute statement="insertUser" />
		<flushOnExecute statement="insertUserItem" />
		<flushOnExecute statement="insertUserAuthorities" />
		<property name="cache-size" value="100" />
	</cacheModel>

	<typeAlias type="org.opennms.acl.model.UserDTOLight" alias="userLight" />

	<typeAlias type="org.opennms.acl.model.UserDTO" alias="userLightComplete" />

	<typeAlias type="org.opennms.acl.model.UserDTO" alias="userCredentials" />

	<typeAlias type="org.opennms.acl.model.UserAuthoritiesDTO"
		alias="userComplete" />

	<resultMap class="userLight" id="resultUserLight">
		<result column="id" property="id" jdbcType="BIGINT" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="enabled" property="enabled" jdbcType="BOOLEAN" />
	</resultMap>

	<resultMap class="userCredentials" id="resultUserCredentials">
		<result column="id" property="id" jdbcType="BIGINT" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap class="userComplete" id="resultUserLightComplete">
		<result column="id" property="id" jdbcType="BIGINT" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="enabled" property="enabled" jdbcType="BOOLEAN" />
		<result column="username" property="authorities" select="getUserAuthorities"
			javaType="java.util.List" />
	</resultMap>


	<!--  S E L E C T -->

	<select id="getUser" resultMap="resultUserLight" cacheModel="user-cache">
		SELECT id, username, enabled
		FROM authentication
		WHERE id = #id# and enabled = 1 ;
    </select>

	<select id="getUserCredentials" resultMap="resultUserCredentials"
		cacheModel="user-cache">
		SELECT id, username, password
		FROM authentication
		WHERE id = #id#;
    </select>

	<select id="getUserWithAuthorities" resultMap="resultUserLightComplete"
		cacheModel="user-cache">
		SELECT id, username, enabled
		FROM authentication
		WHERE username = #username# and enabled = 1 ;
    </select>

	<select id="getUserWithAuthoritiesById" resultMap="resultUserLightComplete"
		cacheModel="user-cache">
		SELECT id, username, enabled
		FROM authentication
		WHERE id = #id# and enabled = 1 ;
    </select>


	<select id="getIdUser" resultClass="int" cacheModel="user-cache">
		SELECT id
		FROM authentication
		WHERE username = #username# ;
    </select>

	<select id="getDisabledUsers" resultMap="resultUserLight"
		cacheModel="user-cache">
		SELECT id, username, enabled
		FROM authentication
		WHERE enabled = 0
		ORDER BY username
		LIMIT $limit$ OFFSET $offset$ ;
    </select>

	<select id="getEnabledUsers" resultMap="resultUserLight"
		cacheModel="user-cache">
		SELECT id, username, enabled
		FROM authentication
		WHERE enabled = 1
		ORDER BY username
		LIMIT $limit$ OFFSET $offset$ ;
    </select>

	<select id="getUsersNumber" resultClass="int" cacheModel="user-cache">
		SELECT count(*) FROM authentication ;
    </select>


	<!--  I N S E R T -->

	<insert id="insertUser" parameterClass="userLightComplete">
		<selectKey keyProperty="id" resultClass="long">
			select nextval('users_id_seq')
        </selectKey>
		INSERT INTO authentication (id, username, password, enabled)
		VALUES (#id:INT#, #username:VARCHAR#, #password:VARCHAR#, 1) ;
	</insert>
	
	<insert id="insertUserAuthorities" parameterClass="userComplete">
        INSERT INTO authentication (id, username, password, enabled)
        VALUES (#id:INT#, #username:VARCHAR#, #password:VARCHAR#, 1) ;
    </insert>
    
    <insert id="insertUserItem" parameterClass="map">
        INSERT INTO group_members (username, group_id)
        VALUES (#username:VARCHAR#, #id:INT# ) ;
    </insert>


	<!--  U P D A T E -->

	<update id="updateUserPassword">
		UPDATE authentication
		SET password = #password:VARCHAR#
		WHERE username = #username:VARCHAR#
		AND id = #id:BIGINT#;
    </update>

	<update id="disableUser" parameterClass="long">
		UPDATE authentication
		SET enabled = 0
		WHERE id = #id:BIGINT# ;
    </update>


	<!--  D E L E T E  -->

	<delete id="deleteUser" parameterClass="int">
		DELETE FROM authentication
		WHERE id = #id:BIGINT# ;
    </delete>
    
    <delete id="deleteUserItems" parameterClass="string">
        DELETE FROM group_members
        WHERE username = #username:VARCHAR# ;
    </delete>
    
</sqlMap>