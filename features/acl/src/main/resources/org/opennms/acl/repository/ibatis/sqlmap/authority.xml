<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap>

	<cacheModel id="authority-cache" type="LRU">
		<flushInterval minutes="60" />
		<flushOnExecute statement="deleteAuthority" />
		<flushOnExecute statement="deleteAuthorityItems" />
		<flushOnExecute statement="deleteUserGroups" />
		<flushOnExecute statement="updateAuthority" />
		<flushOnExecute statement="updateGroupAuthority" />
		<flushOnExecute statement="updateAuthorityToGroupToHidden" />
		<flushOnExecute statement="removeGroupFromAuthorities" />
		<flushOnExecute statement="insertAuthority" />
		<flushOnExecute statement="insertUserAuthority" />
		<flushOnExecute statement="inserAuthorityItem" />
		<property name="cache-size" value="100" />
	</cacheModel>

	<typeAlias type="org.opennms.acl.model.AuthorityDTO" alias="authority" />

	<resultMap class="authority" id="resultAuthority">
		<result column="id" property="id" jdbcType="BIGINT" />
		<result column="name" property="name" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap class="authority" id="resultAuthorityComplete"
		extends="resultAuthority">
		<result column="description" property="description" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap class="authority" id="resultAuthorityWithItems" extends="resultAuthorityComplete">
		<result column="id" property="items" select="getAuthorityItem" javaType="list" />
	</resultMap>


	<!--  S E L E C T -->

	<select id="getAuthority" resultMap="resultAuthorityComplete"
		cacheModel="authority-cache">
		SELECT id, name, description, group_id
		FROM authorities
		WHERE id = #id:BIGINT# ;
    </select>

	<select id="getAuthorityWithItems" resultMap="resultAuthorityComplete"
		cacheModel="authority-cache">
		SELECT id, name, description
		FROM authorities
		WHERE id = #id:BIGINT# ;
    </select>

	<select id="getAllAuthorities" resultMap="resultAuthority"
		cacheModel="authority-cache">
		SELECT id, name
		FROM authorities
		ORDER BY name, id
		LIMIT $limit$ OFFSET $offset$ ;
    </select>

	<select id="getAuthorities" resultMap="resultAuthority"
		cacheModel="authority-cache">
		SELECT id, name
		FROM authorities
		ORDER BY name ;
    </select>

	<select id="getUserAuthorities" resultMap="resultAuthority"
		cacheModel="authority-cache">
		SELECT authorities.id, authorities.name
		FROM authorities, group_members
		WHERE authorities.group_id = group_members.group_id
		AND group_members.username = #username:VARCHAR# ;
    </select>

	<select id="getFreeAuthorities" resultMap="resultAuthority"
		cacheModel="authority-cache">
		SELECT authorities.id, authorities.name
		FROM authorities
		WHERE authorities.id NOT IN( 
		  SELECT authorities.id
		  FROM authorities, group_members
		  WHERE authorities.group_id = group_members.group_id
		  AND group_members.username = #username:VARCHAR#
        );
    </select>

	<select id="getFreeAuthoritiesForGroup" resultMap="resultAuthority"
		cacheModel="authority-cache">
		SELECT authorities.id, authorities.name
		FROM authorities
		WHERE authorities.group_id = 0;
    </select>

	<select id="getAuthoritiesNumber" resultClass="int" cacheModel="authority-cache">
		SELECT count(*) FROM authorities ;
    </select>

	<select id="getAuthorityItemsIds" resultClass="int" cacheModel="authority-cache">
		SELECT category_id
		FROM authorities_categories
		WHERE authority_id = #id:BIGINT#;
    </select>

	<select id="getGroupAuthorities" resultMap="resultAuthority"
		cacheModel="authority-cache">
		SELECT authorities.id, authorities.name
		FROM authorities
		WHERE authorities.group_id = #id:BIGINT#;
    </select>


	<!--  I N S E R T -->

	<insert id="insertAuthority" parameterClass="authority">
		<selectKey keyProperty="id" resultClass="int">
			select nextval('authorities_id_seq')
        </selectKey>
		INSERT INTO authorities (id, name, description)
		VALUES (#id:INT#, #name:VARCHAR#, #description:VARCHAR#) ;
	</insert>

	<insert id="insertUserAuthority" parameterClass="map">
		INSERT INTO authorities_authentication (username, authority)
		VALUES (#username:VARCHAR#, (select name from authorities where id =
		#id:INTEGER#)) ;
    </insert>

	<insert id="inserAuthorityItem" parameterClass="map">
	   <selectKey keyProperty="id" resultClass="int">
            select nextval('authorities_categories_id_seq')
        </selectKey>
		INSERT INTO authorities_categories (id, authority_id, category_id)
		VALUES (#id:BIGINT#, #authorityId:BIGINT#, #categoryId:VARCHAR#) ;
    </insert>


	<!--  U P D A T E -->

	<update id="updateAuthority" parameterClass="authority">
		UPDATE authorities
		SET name = #name:VARCHAR#, description = #description:VARCHAR#
		WHERE id = #id# ;
    </update>

	<update id="updateGroupAuthority" parameterClass="map">
		UPDATE authorities
		SET group_id = #groupId:BIGINT#
		WHERE id = #id:BIGINT# ;
    </update>
    
    <update id="updateAuthorityToGroupToHidden" parameterClass="int">
        UPDATE authorities
        SET group_id = 0
        WHERE group_id = #id:BIGINT# ;
    </update>

	<update id="removeGroupFromAuthorities" parameterClass="int">
		UPDATE authorities
		SET group_id = 0
		WHERE id = #id:BIGINT# ;
    </update>


	<!--  D E L E T E  -->

	<delete id="deleteAuthority" parameterClass="int">
		DELETE FROM authorities
		WHERE id = #id# ;
    </delete>

	<delete id="deleteUserGroups" parameterClass="string">
		DELETE FROM group_members
		WHERE username = #username:VARCHAR# ;
    </delete>

	<delete id="deleteAuthorityItems" parameterClass="int">
		DELETE FROM authorities_categories
		WHERE authority_id = #id# ;
    </delete>

</sqlMap>