<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/security 
http://www.springframework.org/schema/security/spring-security-3.1.xsd
http://www.springframework.org/schema/tx 
http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<context:component-scan base-package="org.opennms.acl" />
	<context:property-placeholder location="/config.properties" />

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource"
		p:basename="org.opennms.acl.ui.messages.ui" />

	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
		p:configLocation="classpath:ehcache.xml" />


	<!--
		<bean name="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean"
		p:jndiName="${jndi.datasource}"/>
	-->

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:url="${jdbc.url}" p:username="${jdbc.username}"
		p:password="${jdbc.password}" p:driverClassName="${jdbc.driver}"
		p:maxIdle="3" p:maxWait="50" p:removeAbandoned="true"
		p:removeAbandonedTimeout="550" p:logAbandoned="true" p:maxActive="20" />

	<bean id="onmsDataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:url="${jdbc.onms.url}" p:username="${jdbc.onms.username}"
		p:password="${jdbc.onms.password}" p:driverClassName="${jdbc.onms.driver}"
		p:maxIdle="3" p:maxWait="50" p:removeAbandoned="true"
		p:removeAbandonedTimeout="550" p:logAbandoned="true" p:maxActive="20" />

	<!-- iBATIS  -->
	<bean name="sqlMapClient"
		class="org.springframework.orm.ibatis.SqlMapClientFactoryBean"
		p:dataSource-ref="dataSource" p:configLocation="/acl-sqlMapConfig.xml" />

	<bean name="onmsSqlMapClient"
		class="org.springframework.orm.ibatis.SqlMapClientFactoryBean"
		p:dataSource-ref="onmsDataSource" p:configLocation="/acl-onms-sqlMapConfig.xml" />

	<!-- T R A N S A C T I O N S -->
	<bean name="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
		p:dataSource-ref="dataSource" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED"
				rollback-for="RepositoryException" />
			<tx:method name="update*" propagation="REQUIRED"
				rollback-for="RepositoryException" />
			<tx:method name="delete*" propagation="REQUIRED"
				rollback-for="RepositoryException" />
			<tx:method name="read*" read-only="true" />
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="repositoryOperations"
			expression="execution(* org.opennms.acl.repository.*Impl.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="repositoryOperations" />
	</aop:config>

	<!--  S E C U R I T Y -->
	<sec:http pattern="/log*.jsp" security="none" />
	<sec:http pattern="/**">
		<sec:intercept-url pattern="/*.page" access="ROLE_ADMIN" />
		<sec:form-login login-page="/login.jsp"
			default-target-url="/" login-processing-url="/j_security_check"
			authentication-failure-url="/loginError.jsp" />
		<sec:logout logout-url="/logout.jsp" invalidate-session="true"
			logout-success-url="/login.jsp" />
	</sec:http>

	<sec:authentication-manager>
		<sec:authentication-provider user-service-ref="userDetailsService">
			<sec:password-encoder hash="sha" />
		</sec:authentication-provider>
	</sec:authentication-manager>

	<bean id="accessManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>

	<bean id="userDetailsService"
		class="org.opennms.acl.repository.jdbc.AuthenticationJdbcDaoImpl">
		<property name="dataSource" ref="dataSource" />
		<property name="usersByUsernameQuery"
			value="SELECT username, password, enabled FROM authentication WHERE username = ?" />
		<property name="authoritiesByUsernameQuery"
			value="SELECT username, authority FROM authorities WHERE username = ?" />
	</bean>

	<!-- CACHE -->

	<bean id="aclCache"
		class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
		<constructor-arg ref="aclEhCache" />
	</bean>

	<bean id="aclEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
		p:cacheManager-ref="cacheManager" p:cacheName="aclCache" />

	<bean id="autoritiesEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
		p:cacheManager-ref="cacheManager" p:cacheName="autoritiesCache" />

	<bean id="userEhCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
		p:cacheManager-ref="cacheManager" p:cacheName="userCache" />

</beans>
