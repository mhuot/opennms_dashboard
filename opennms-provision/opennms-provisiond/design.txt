Lifecycle/Phases in Provisioning

The ideas here were inspired my maven's architecture.

Provisioning provided by Provisiond has the following objectives:

To allow simple and customizable provisioning services to users of OpenNMS

This will include 'discovered provisioning' as currently provided by Capsd
and 'directed provisioning' at currently provided by the importer as well as 
a hybrid of direction and discover that is as yet unprovided.

Additionally, the ability to enhance the the set of possible provisions
without having to completely rewrite the provisioning service is desired.

We need to be able to cover things like 'only provision interfaces that are not phone connections'

Or enable collection on switch ports if they are active

Or add an entry to the /etc/hosts file for any newly discovered nodes/interfaces

To accomplish this we have defined several key abstractions

Lifecycle - This represents an entire process.  For example the import lifecycle represents 
the entire process of importing a file, scanning the nodes, and updated the database.  There 
is more than one kind of lifecycle in provisioning.  Scanning a new node is represented as a
lifecycle, importing an entire network, and scanning an interface for services.

A lifecycle can contain nested lifecycles, for example, the import a network lifecyle contains
nested node scanning lifecycles

A lifecycle consists of nested phases.  A phase represents one sequential step of the lifecyle.
Phases happen in series within a lifecyle.  Activities necessary to do the provisioning are 
each associated with a lifecycle phase.

Lifecycles are 'triggered' by various events which can include the following:
1.  a newSuspect event or other event is received
2.  the scheduled time for a scan has occurred
3.  a lifecycle triggers a nested lifecycle

Data associated with the lifecycle are stored as attributes on the lifecycle so activities
can access the data.

Phase - this represents one single sequential step in a lifecycle.  The each have a well-known
name as described in the configuration.  Activities are associated with the phases of a lifecyle

Activity - these are the actions that are performed in the processing of a lifecycle phase.
An activity is represented by method on an ActivityProvider.  Methods are annotated to indicate
which lifecycle and phase they should be associated with.

Trigger - this is the impetus for starting and running a new lifecyle.  The properties
related to the lifecycle are here. For example, an import event that triggers the import
of a network would trigger the import lifecycle and the related properties would be the 
importResource and the foreignSource (if it is overridden)

Other Issues:
- How can I trigger a new lifecycle
- How do I manage the synchronization of lifecycle work?
- Is there a way to 'define' a lifecycle on the fly that has various phases in order to increase
  the parallelism?
- Can you have asynchronous phases?
- Phase dependencies and parallelization of lifecycles?
- How about phases that trigger an entire collection of lifecycles? 




